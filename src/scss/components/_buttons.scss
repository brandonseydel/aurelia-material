@import "../bootstrap";
@import "../components/_ripples";
@import "../theme";

@mixin light($name) {
  .theme--light.#{$name} {
    @include button($material-light);
  }
}

@mixin dark($name) {
  .theme--dark.#{$name} {
    @include button($material-dark);
  }
}

@mixin button($material) {
  color: map-get($material, "text.primary");

  &.#{$prefix}-btn--disabled {
    color: map-get($material, "buttons.disabled") !important;

    .#{$prefix}-icon,
    .#{$prefix}-btn__loading {
      color: map-get($material, "buttons.disabled") !important;
    }

    &:not(.#{$prefix}-btn--icon):not(.#{$prefix}-btn--flat):not(.#{$prefix}-btn--outline) {
      background-color: map-get($material, "buttons.focused") !important;
    }
  }

  &:not(.#{$prefix}-btn--icon):not(.#{$prefix}-btn--flat) {
    background-color: map-get($material, "app-bar");
  }
}

//TODO FIX THIS BS
@include dark("#{$prefix}-btn");
@include light("#{$prefix}-btn");

/** Base Spec */
.#{$prefix}-btn {
  align-items: center;
  border-radius: $button-border-radius;
  display: inline-flex;
  height: $button-height;
  flex: 0 0 auto;
  font-size: $button-font-size;
  font-weight: $button-font-weight;
  justify-content: center;
  margin: $button-margin;
  min-width: $button-min-width;
  outline: 0;
  text-transform: $button-text-transform;
  text-decoration: none;
  transition: $primary-transition, color 1ms;
  position: relative;
  vertical-align: middle;
  user-select: none;
}

/** Psuedo */
.#{$prefix}-btn {
  &:before {
    border-radius: inherit;
    color: inherit;
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    opacity: 0.12;
    transition: $primary-transition;
    width: 100%;
  }
}

/** Content */
.#{$prefix}-btn {
  padding: $button-padding;

  &--active,
  &:hover,
  &:focus {
    position: relative;

    &:before {
      background-color: currentColor;
    }
  }

  &:hover::before {
    @media (hover: none) {
      background-color: transparent;
    }
  }

  &__content {
    align-items: center;
    border-radius: inherit;
    color: inherit;
    display: flex;
    flex: 1 0 auto;
    justify-content: center;
    margin: 0 auto;

    position: relative;
    transition: $primary-transition;
    white-space: nowrap;
    width: inherit;
  }
}

/** Sizes */
.#{$prefix}-btn {
  &--small {
    font-size: $button-small-font-size;
    height: $button-small-height;
    padding: $button-small-padding;
  }

  &--large {
    font-size: $button-large-font-size;
    height: $button-large-height;
    padding: $button-large-padding;
  }
}

/** Icons */
.#{$prefix}-btn .#{$prefix}-btn__content .#{$prefix}-icon {
  color: inherit;
}

/** Types */
.#{$prefix}-btn {
  &:not(.#{$prefix}-btn--depressed):not(.#{$prefix}-btn--flat) {
    will-change: box-shadow;
    @include elevation(2);

    &:active {
      @include elevation(8);
    }
  }

  &--icon {
    background: transparent;
    box-shadow: none !important;
    border-radius: 50%;
    justify-content: center;
    min-width: 0;
    width: $button-height;

    &.#{$prefix}-btn--small {
      width: $button-small-height;
    }

    &.#{$prefix}-btn--large {
      width: $button-large-height;
    }

    &:before {
      border-radius: 50%;
    }
  }

  &--floating {
    border-radius: 50%;
    min-width: 0;
    height: $button-floating-width;
    width: $button-floating-width;
    padding: 0;

    &.#{$prefix}-btn--fixed,
    &.#{$prefix}-btn--absolute {
      z-index: 4;
    }

    &:not(.#{$prefix}-btn--depressed):not(.#{$prefix}-btn--flat) {
      @include elevation(6);

      &:active {
        @include elevation(12);
      }
    }

    .#{$prefix}-btn__content {
      flex: 1 1 auto;
      margin: 0;
      height: 100%;
    }

    &:after {
      border-radius: 50%;
    }

    .#{$prefix}-btn__content {
      > :not(:only-child) {
        transition: $primary-transition;

        &:first-child {
          opacity: 1;
        }

        &:last-child {
          opacity: 0;
          transform: rotate(-45deg);
        }

        &:last-child,
        &:first-child {
          -webkit-backface-visibility: hidden;
          position: absolute;
          left: 0;
          top: 0;
        }
      }
    }

    &.#{$prefix}-btn--active {
      .#{$prefix}-btn__content {
        > :not(:only-child) {
          &:first-child {
            opacity: 0;
            transform: rotate(45deg);
          }

          &:last-child {
            opacity: 1;
            transform: rotate(0);
          }
        }
      }
    }

    .#{$prefix}-icon {
      height: inherit;
      width: inherit;
    }

    &.#{$prefix}-btn--small {
      height: $button-floating-small-width;
      width: $button-floating-small-width;

      .#{$prefix}-icon {
        font-size: $button-floating-small-icon-width;
      }
    }

    &.#{$prefix}-btn--large {
      height: $button-floating-large-width;
      width: $button-floating-large-width;

      .#{$prefix}-icon {
        font-size: $button-floating-large-icon-width;
      }
    }
  }

  &--reverse {
    .#{$prefix}-btn__content {
      flex-direction: row-reverse;
    }

    &.#{$prefix}-btn--column {
      .#{$prefix}-btn__content {
        flex-direction: column-reverse;
      }
    }
  }

  &--fixed,
  &--absolute {
    margin: 0;
  }
  &.#{$prefix}-btn--absolute {
    position: absolute;
  }

  &.#{$prefix}-btn--fixed {
    position: fixed;
  }

  &--top {
    &:not(.#{$prefix}-btn--absolute) {
      top: map-get($grid-gutters, "lg");
    }

    &.#{$prefix}-btn--absolute {
      top: -($button-floating-width / 2);

      &.#{$prefix}-btn--small {
        top: -($button-floating-small-width / 2);
      }

      &.#{$prefix}-btn--large {
        top: -($button-floating-large-width / 2);
      }
    }
  }

  &--bottom {
    &:not(.#{$prefix}-btn--absolute) {
      bottom: map-get($grid-gutters, "lg");
    }

    &.#{$prefix}-btn--absolute {
      bottom: -($button-floating-width / 2);

      &.#{$prefix}-btn--small {
        bottom: -($button-floating-small-width / 2);
      }

      &.#{$prefix}-btn--large {
        bottom: -($button-floating-large-width / 2);
      }
    }
  }

  &--left {
    left: map-get($grid-gutters, "lg");
  }

  &--right {
    right: map-get($grid-gutters, "lg");
  }
}

/** Disabled */
.#{$prefix}-btn {
  &.#{$prefix}-btn--disabled {
    box-shadow: none !important;
    pointer-events: none;
  }

  &:not(.#{$prefix}-btn--disabled):not(.#{$prefix}-btn--floating):not(.#{$prefix}-btn--icon) {
    .#{$prefix}-btn__content .#{$prefix}-icon {
      transition: none;
    }
  }
}

.#{$prefix}-btn--icon {
  padding: 0;
}

/** Loader */
.#{$prefix}-btn {
  &--loader {
    pointer-events: none;

    .#{$prefix}-btn__content {
      opacity: 0;
    }
  }

  &__loading {
    align-items: center;
    display: flex;
    height: 100%;
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;

    .#{$prefix}-icon {
      &--left {
        margin-right: 1rem;
        line-height: inherit;
      }

      &--right {
        margin-left: 1rem;
        line-height: inherit;
      }
    }
  }
}

/** Custom Buttons */
.#{$prefix}-btn {
  &.#{$prefix}-btn--outline {
    border: 1px solid currentColor;
    background: transparent !important;
    box-shadow: none;

    &:hover {
      box-shadow: none;
    }
  }

  &--block {
    display: flex;
    flex: 1;
    margin: $button-margin-y 0;
    width: 100%;
  }

  &--round {
    border-radius: 28px;

    &:after {
      border-radius: 28px;
    }
  }
}

/** Themes */
.#{$prefix}-btn:not(.#{$prefix}-btn--outline) {
  &.primary,
  &.secondary,
  &.accent,
  &.success,
  &.error,
  &.warning,
  &.info {
    color: map-get($material-dark, "text.primary");
  }
}
